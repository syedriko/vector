# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.71"
name = "mlua"
version = "0.9.6"
authors = [
    "Aleksandr Orlenko <zxteam@pm.me>",
    "kyren <catherine@kyju.org>",
]
description = """
High level bindings to Lua 5.4/5.3/5.2/5.1 (including LuaJIT) and Roblox Luau
with async/await features and support of writing native Lua modules in Rust.
"""
documentation = "https://docs.rs/mlua"
readme = "README.md"
keywords = [
    "lua",
    "luajit",
    "luau",
    "async",
    "scripting",
]
categories = [
    "api-bindings",
    "asynchronous",
]
license = "MIT"
repository = "https://github.com/khvzak/mlua"

[package.metadata.docs.rs]
features = [
    "lua54",
    "vendored",
    "async",
    "send",
    "serialize",
    "macros",
    "parking_lot",
    "unstable",
]
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[[example]]
name = "async_http_client"
required-features = [
    "async",
    "macros",
]

[[example]]
name = "async_http_reqwest"
required-features = [
    "async",
    "serialize",
    "macros",
]

[[example]]
name = "async_http_server"
required-features = [
    "async",
    "macros",
]

[[example]]
name = "async_tcp_server"
required-features = [
    "async",
    "macros",
]

[[example]]
name = "guided_tour"
required-features = ["macros"]

[[example]]
name = "serialize"
required-features = ["serialize"]

[[example]]
name = "userdata"
required-features = ["macros"]

[[bench]]
name = "benchmark"
harness = false
required-features = ["async"]

[[bench]]
name = "serde"
harness = false
required-features = ["serialize"]

[dependencies.bstr]
version = "1.0"
features = ["std"]
default_features = false

[dependencies.erased-serde]
version = "0.4"
optional = true

[dependencies.ffi]
version = "0.5.1"
package = "mlua-sys"

[dependencies.futures-util]
version = "0.3"
features = ["std"]
optional = true
default-features = false

[dependencies.mlua_derive]
version = "=0.9.2"
optional = true

[dependencies.num-traits]
version = "0.2.14"

[dependencies.once_cell]
version = "1.0"

[dependencies.parking_lot]
version = "0.12"
optional = true

[dependencies.rustc-hash]
version = "1.0"

[dependencies.serde]
version = "1.0"
optional = true

[dependencies.serde-value]
version = "0.7"
optional = true

[dev-dependencies.futures]
version = "0.3.5"

[dev-dependencies.hyper]
version = "0.14"
features = [
    "client",
    "server",
]

[dev-dependencies.maplit]
version = "1.0"

[dev-dependencies.reqwest]
version = "0.11"
features = ["json"]

[dev-dependencies.serde]
version = "1.0"
features = ["derive"]

[dev-dependencies.serde_json]
version = "1.0"

[dev-dependencies.static_assertions]
version = "1.0"

[dev-dependencies.tempfile]
version = "3"

[dev-dependencies.tokio]
version = "1.0"
features = [
    "macros",
    "rt",
    "time",
]

[dev-dependencies.trybuild]
version = "1.0"

[features]
async = ["futures-util"]
lua51 = ["ffi/lua51"]
lua52 = ["ffi/lua52"]
lua53 = ["ffi/lua53"]
lua54 = ["ffi/lua54"]
luajit = ["ffi/luajit"]
luajit52 = [
    "luajit",
    "ffi/luajit52",
]
luau = [
    "ffi/luau",
    "libloading",
]
luau-jit = [
    "luau",
    "ffi/luau-codegen",
]
luau-vector4 = [
    "luau",
    "ffi/luau-vector4",
]
macros = ["mlua_derive/macros"]
module = [
    "mlua_derive",
    "ffi/module",
]
send = []
serialize = [
    "serde",
    "erased-serde",
    "serde-value",
]
unstable = []
vendored = ["ffi/vendored"]

[target."cfg(not(target_arch = \"wasm32\"))".dev-dependencies.criterion]
version = "0.5"
features = ["async_tokio"]

[target."cfg(not(target_arch = \"wasm32\"))".dev-dependencies.rustyline]
version = "13.0"

[target."cfg(not(target_arch = \"wasm32\"))".dev-dependencies.tokio]
version = "1.0"
features = ["full"]

[target."cfg(unix)".dependencies.libloading]
version = "0.8"
optional = true
